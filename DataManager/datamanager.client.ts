// @generated by protobuf-ts 2.11.1 with parameter long_type_string
// @generated from protobuf file "datamanager.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { DataManager } from "./datamanager";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Empty } from "./google/protobuf/empty";
import type { PowerConsumptionReport } from "./datamanager";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service DataManager
 */
export interface IDataManagerClient {
    /**
     * @generated from protobuf rpc: PostPowerConsumption
     */
    postPowerConsumption(input: PowerConsumptionReport, options?: RpcOptions): UnaryCall<PowerConsumptionReport, Empty>;
}
/**
 * @generated from protobuf service DataManager
 */
export class DataManagerClient implements IDataManagerClient, ServiceInfo {
    typeName = DataManager.typeName;
    methods = DataManager.methods;
    options = DataManager.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: PostPowerConsumption
     */
    postPowerConsumption(input: PowerConsumptionReport, options?: RpcOptions): UnaryCall<PowerConsumptionReport, Empty> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<PowerConsumptionReport, Empty>("unary", this._transport, method, opt, input);
    }
}
