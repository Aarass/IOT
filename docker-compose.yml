services:
  db:
    image: postgres
    restart: always
    shm_size: 128mb
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  broker:
    image: emqx:latest
    ports:
      - 18083:18083
      - 1883:1883
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:18083/status"]
      interval: 5s
      timeout: 3s
      retries: 5

  nats:
    image: nats:2-alpine
    ports:
      - 4222:4222
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 3s
      retries: 5

  datamanager:
    build:
      context: ./DataManager
      dockerfile: ./Dockerfile
    environment:
      PORT: ${MANAGER_PORT}
      DATABASE_URL: "postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/db?sslmode=disable"
      MQTT_HOST: broker
      MQTT_PORT: 1883
    ports:
      - "${MANAGER_PORT}:${MANAGER_PORT}"
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy

  gateway:
    build:
      context: .
      dockerfile: ./Gateway/Dockerfile
    environment:
      PORT: ${GATEWAY_PORT}
      GRPC_SERVER: "http://datamanager:${MANAGER_PORT}"
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    depends_on:
      - datamanager

  mqttclient:
    build:
      context: ./MQTTClient
      dockerfile: ./Dockerfile
    environment:
      MQTT_HOST: broker
      MQTT_PORT: 1883
      NATS_HOST: nats
      NATS_PORT: 4222
    depends_on:
      broker:
        condition: service_healthy
      nats:
        condition: service_healthy

  eventmanager:
    build:
      context: ./EventManager
      dockerfile: ./Dockerfile
    environment:
      MQTT_HOST: broker
      MQTT_PORT: 1883
    depends_on:
      broker:
        condition: service_healthy

  mlaas:
    build:
      context: ./MLaaS
      dockerfile: ./Dockerfile
    ports:
      - 8000:8000

  analytics:
    build:
      context: ./Analytics
      dockerfile: ./Dockerfile
    environment:
      MQTT_HOST: broker
      MQTT_PORT: 1883
      NATS_HOST: nats
      NATS_PORT: 4222
      MLAAS_HOST: mlaas
      MLAAS_PORT: 8000
    depends_on:
      broker:
        condition: service_healthy
      nats:
        condition: service_healthy
      mlaas:
        condition: service_started
